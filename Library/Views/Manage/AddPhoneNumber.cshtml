@using Microsoft.AspNet.Identity
@model Library.Models.AddPhoneNumberViewModel
@{
    ViewBag.Title = "Phone Number";
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>

    <div class="phone-number-container mt-4 p-4 border rounded shadow-sm bg-light">
        <h4 class="text-center mb-4">Add a Phone Number</h4>
        <hr />
        <form id="add-phone-form" action="@Url.Action("AddPhoneNumber", "Manage")" method="post">
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label for="Number" class="form-label">Phone Number:</label>
                @Html.TextBoxFor(m => m.Number, new { @class = "form-control", id = "Number", placeholder = "Enter phone number" })
                @Html.ValidationMessageFor(m => m.Number, "", new { @class = "text-danger" })
            </div>
            <button type="button" class="btn btn-primary" onclick="submitPhoneNumber()">Submit</button>
        </form>
        <p id="status-message" class="text-success mt-3" style="display:none;">Phone number added successfully!</p>
    </div>
</main>

<script>
    function submitPhoneNumber() {
        const form = document.getElementById('add-phone-form');
        const formData = new FormData(form);
        const statusMessage = document.getElementById('status-message');

        fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            }
            throw new Error('Network response was not ok.');
        })
        .then(data => {
            if (data.success) {
                statusMessage.style.display = 'block';
                form.reset();
                setTimeout(() => statusMessage.style.display = 'none', 3000);
            } else {
                alert('Failed to add phone number: ' + (data.error || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('There was a problem with the fetch operation:', error);
            alert('An error occurred while adding the phone number. Please try again.');
        });
    }
</script>

<style>
    .phone-number-container {
        max-width: 500px;
        margin: 0 auto;
        background-color: #f8f9fa;
    }

    .btn {
        font-size: 1rem;
        padding: 10px 20px;
    }

    .text-danger {
        color: #dc3545;
    }

    .text-success {
        color: #28a745;
    }
</style>
